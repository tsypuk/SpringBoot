buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/"}
		maven {
			url "https://maven.eveoh.nl/content/repositories/releases"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "nl.eveoh:gradle-aspectj:1.6"
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0.1"
	}
}

project.ext {
	aspectjVersion = '1.8.0.M1'
}

apply plugin: 'java'
apply plugin: 'idea'
//apply plugin: 'aspectj'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
	test {
		java {
			srcDir 'src/test/java'
		}
	}
}

jacoco {
	toolVersion = "0.7.7.201606060606"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination "${buildDir}/jacocoHtml"
	}
}

test {
	jacoco {
		append = false
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpFile = file("$buildDir/jacoco/classpathdumps")
	}
}
idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.0'
}

jar {
	baseName = 'spring4'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "http://repo.springsource.org/libs-snapshot" }
	maven { url "http://www.eveoh.nl/files/maven2"}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
//	 https://mvnrepository.com/artifact/javax.inject/javax.inject
	compile group: 'javax.inject', name: 'javax.inject', version: '1'
	compile 'com.github.stefanbirkner:system-rules:1.11.0'
	compile 'org.springframework:spring-aspects:4.0.0.M3'
//	aspectpath 'org.springframework:spring-aspects:4.0.0.M3'
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
repositories {
	mavenLocal()
	mavenCentral()
}